% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/container-cast.R
\name{vec_cast_container}
\alias{vec_cast_container}
\alias{vec_cast_container.default}
\alias{vec_cast_container.logical}
\alias{vec_cast_container.double}
\alias{vec_cast_container.integer}
\alias{vec_cast_container.vctrs_rray}
\alias{vec_cast_container_common}
\title{Cast to a container type}
\usage{
vec_cast_container(x, to)

\method{vec_cast_container}{default}(x, to)

vec_cast_container.logical(x, to)

vec_cast_container.double(x, to)

vec_cast_container.integer(x, to)

vec_cast_container.vctrs_rray(x, to)

vec_cast_container_common(..., .to = NULL)
}
\arguments{
\item{x}{Vector to cast.}

\item{to}{Container type to cast to.}

\item{...}{Vectors to cast to a common container type.}

\item{.to}{If not \code{NULL}, overrides the common container
type to cast \code{...} to.}
}
\description{
\code{vec_cast_container()} casts \code{x} to the "container" type of \code{to}. This should
make the following assumptions:
\itemize{
\item \code{x} has the correct shape.
\item \code{x} has the correct internal type.
}

\code{vec_cast_container_common()} casts multiple vectors to a common container
type.
}
\details{
\code{vec_cast_container()} is useful for restoring input that has been modified
in some way back to its original container type without altering the internal
type or shape of the modified input. For example, the \code{>} method
for rrays takes two inputs, finds the common container type between them
and returns a logical vector wrapped in that container type.

When casting between base R types, this simply returns \code{x}.
}
\examples{

# Upcasting to an rray. Still a logical
# vec_cast_container(TRUE, rray(1))

# Downcasting to a double, no longer an rray
# (the "container" here is just a base R object)
# vec_cast_container(rray(1), TRUE)

# Shape of `x` is kept
# vec_cast_container(matrix(1:5), rray(1))

# Dim names of `x` are kept
x <- rray(1:2, dim_names = list(c("r1", "r2")))
# vec_cast_container(x, 1)

}
\keyword{internal}
